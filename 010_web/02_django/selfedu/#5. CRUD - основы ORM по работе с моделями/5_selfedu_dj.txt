#5. CRUD - основы ORM по работе с моделями | Django уроки
https://proproprogs.ru/django/crud-osnovy-orm-po-rabote-s-modelyami
https://www.youtube.com/watch?v=-knypkOQSSw&t=1008s

https://djangodoc.ru
https://djbook.ru/rel3.0/
https://www.djangoproject.com


CRUD 

Create – создание
Read – чтение
Update – изменение
Delete – удаление

python manage.py shell


создание запесей

создать новую запись в таблице,
создать экземпляр класса Women

Women(title='Анджелина Джоли', content='Биография Анджелины Джоли')
создание экземпляра класса еще не означает добавление записи в таблицу

w1 = _

w1.id # идентификатор
w1.title # заголовок
w1.time_create # время добавления записи
w1.pk # значение primary key  атрибутом id.



user01@user01-SLIMFAST09-5:~$ cd /media/user01/Data_120Gb_Patriot/selfedu/sqlitestudio-3.3.2/SQLiteStudio

$ ./sqlitestudio



отображение выпполненных запросов

from django.db import connection

>>> connection.queries
[{'sql': 'INSERT INTO "women_women" ("title", "content", "photo", "time_create", "time_update", "is_published") VALUES (\'Анджелина Джоли\', \'Биография Анджелины Джоли\', \'\', \'2021-03-11 15:51:38.741661\', \'2021-03-11 15:51:38.741721\', 1)', 'time': '0.008'}, {'sql': 'UPDATE "women_women" SET "title" = \'Анджелина Джоли\', "content" = \'Биография Анджелины Джоли\', "photo" = \'\', "time_create" = \'2021-03-11 15:51:38.741661\', "time_update" = \'2021-03-11 15:51:45.184949\', "is_published" = 1 WHERE "women_women"."id" = 1', 'time': '0.007'}]
>>> 

w2 = Women(title='Энн Хэтэуэй', content='Биография Энн Хэтэуэй')

w2.save()

w3 = Women()
w3.title = 'Джулия Робертс'
w3.content = 'Биография Джулии Робертс'
w3.save()

Менеджер записей objects
статический объект objects, который наследуется от базового класса Model и представляет собой ссылку на специальный класс Manager
Women.objects

# автомотически добавляет запись в базу при создании объекта без вызова w4.save() на лету 
w4 = Women.objects.create(title='Ума Турман', content='Биография Ума Турман')

w4.pk
Women.objects.create(title='Кира Найтли', content='Биография Киры Найтли')


Выборка записей из таблицы

менеджером записей – объектом objects 
Women.objects.all()
Women.objects.all()[0].title
connection.queries

Women.objects.all()
w = _
w[0]
w[0].title
w[0].content
len(w)
for wi in w:
     print(wi.title)

выбор по критерию


Women.objects.filter(title='Энн Хэтэуэй')

Women.objects.filter(title='Энн')

<имя атрибута>__gte – сравнение больше или равно (>=);
<имя атрибута>__lte – сравнение меньше или равно (<=).

Women.objects.filter(pk__gte=2)
Women.objects.filter(pk=2)
выбирает записи не удовлетворяющие указанному условию
Women.objects.exclude(pk=2)

Women.objects.get(pk=2)
метод get() генерирует исключения. А метод filter() вернет несколько записей или пустой список.


Сортировка записей

Women.objects.filter(pk__lte=4).order_by('title')
все записи, у которых id меньше или равен 4 и отсортированных по полю title в порядке возрастания

Women.objects.order_by('title')
выбраны все записи сортировкой

изменить порядок сортировки на противоположный
Women.objects.order_by('-time_update')



Изменение записей

wu = Women.objects.get(pk=2)  # прочитать 

wu.title = 'Марго Робби'
wu.content = 'Биография Марго Робби'
# изменить 

wu.save() # сохранить

connection.queries

Удаление записей

wd = Women.objects.filter(pk__gte=4)

wd.delete()

